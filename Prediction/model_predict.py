# -*- coding: utf-8 -*-
# 模型预测

import os, json
import numpy as np
from bert.extract_feature import BertVector
from keras.models import load_model
from att import Attention

# 加载训练效果最好的模型
model_dir = './models'
files = os.listdir(model_dir)
models_path = [os.path.join(model_dir, _) for _ in files]
best_model_path = sorted(models_path, key=lambda x: float(x.split('-')[-1].replace('.h5', '')), reverse=True)[0]
print(best_model_path)
model = load_model(best_model_path, custom_objects={"Attention": Attention})

# 示例语句及预处理
# text1 = '宋甲一#尹某#"本院认为，被告人彭光辉、宋甲一、姜华飞、赵某、尹某为牟取非法利益，在明知国家禁止出口木炭的情况下，违反海关法规，逃避国家有关进出境禁止性管理，采用伪报品名的方式帮助他人走私出口木炭，其中被告人彭光辉、宋甲一参与走私出口木炭约86.708吨，被告人姜华飞参与走私出口木炭约65吨，被告人赵某、尹某参与走私出口木炭21.708吨，其行为均已构成走私国家禁止进出口的货物罪'
# text1 = '林善庆#唐钧海#被告人林善庆在与唐钧海共同犯罪中起主要作用，系主犯，被告人唐钧海在共同犯罪中起次要作用，系从犯，应当减轻处罚,被告人陈庆旺、郑祖娇、魏能俊、陈庆团、陈庆省、唐钧海、蔡某、陈某甲、郑某甲、王某甲归案后能如实供述自己的罪行，可以从轻处罚'
# text1 = '徐佩端#吕干富#"本院认为，被告人徐佩端、黄伟练、黄秋茵、黄耀杰、吕定力、吕干富无视国家法律，走私国家限制进口的货物入境，偷逃应缴税额特别巨大，其行为均已构成走私普通货物罪，被告人黄秋茵、黄耀杰、吕定力、吕干富受被告人徐佩端的指使，分别在境内收货、送货、收取货款、支付报酬等，起辅助作用，均系从犯，归案后，被告人徐佩端、黄伟练、黄秋茵、黄耀杰、吕定力、吕干富如实供述自己的罪行，依法可以从轻处罚，被告人徐佩端、黄伟练提供了同案犯罪嫌疑人“齐”的真实身份为李某，侦查机关根据该线索将李某抓获归案，在共同犯罪中，被告人徐佩端不仅在境外组织货源，在境内联系“水客头”实施通关，并组织同案人员在境内收货、送货、支付报酬等，起组织、领导作用，系主犯，应按照其所参与的全部犯罪处罚'
# text1 = '廖世海#黄秋红#"本院认为，被告人廖世海、黄秋红违反国家法律法规，逃避海关监管，走私普通货物进境，偷逃税款数额巨大，其行为均已构成走私普通货物罪,在共同犯罪中，被告人廖世海指挥被告人黄秋红实施走私行为，起主要作用，是主犯,被告人廖世海、黄秋红能如实供述自己的罪行，可以从轻处罚,被告人黄秋红受被告人廖世海的雇请实施走私行为，在共同犯罪中起次要作用，是从犯，应当减轻处罚,根据被告人廖世海、黄秋红的犯罪情节和悔罪表现，适用缓刑确实不致再危害社会，可以宣告缓刑'
# text1 = '魏能俊#陈庆团#被告人陈庆旺、郑祖娇、魏能俊、林汉、陈庆团、陈保建、陈庆省、蔡某、陈某甲、郑某甲、王某甲违反海关法规，逃避海关监管，非法偷运燃料油进境销售牟利，偷逃应缴税额特别巨大，且陈庆省又系苍南县海盛石油贸易有限公司走私行为的直接责任人员，上述被告人行为均构成走私普通货物罪,被告人陈庆旺、郑祖娇、魏能俊、陈庆团在与陈保建、陈庆省、蔡某、陈某甲、郑某甲、王某甲共同犯罪中起主要作用，系主犯，被告人陈保建、陈庆省、蔡某、陈某甲、郑某甲、王某甲在共同犯罪中起次要作用，系从犯，应当减轻处罚'
# text1 = '梁惠胜#陈汉鸿#"本院认为，被告人梁惠胜、陈汉鸿、黄建荣违反海关法规，逃避海关监管，驾驶船舶从香港装载154.471吨冻品偷运入境，其中149.011吨属国家禁止进口的货物，其行为已构成走私国家禁止进出口的货物罪,被告人梁惠胜、陈汉鸿、黄建荣在共同犯罪中起次要作用，是从犯，应当减轻处罚,被告人梁惠胜、陈汉鸿、黄建荣归案后如实供述自己主要罪行，可以从轻处罚,被告人梁惠胜被判处有期徒刑以上刑罚，刑罚执行完毕后五年以内再犯应当判处有期徒刑以上刑罚之罪，属累犯，应当从重处罚'
# text1 = '吴某甲#徐某甲#"本院认为，被告人吴某甲、徐某甲、董某甲，逃避海关监管将境外固体废物运输进境，情节特别严重，其行为均已构成走私废物罪,公诉机关指控被告人吴某甲、徐某甲和董某甲犯罪的事实清楚，证据确实、充分，定性准确，量刑建议恰当，应予支持,综上，本院决定对被告人吴某甲、徐某甲、董某甲依法予以减轻处罚,被告人吴某甲、徐某甲在共同犯罪中起主要作用，属主犯，应当按照其所参与的全部犯罪处罚,被告人吴某甲、徐某甲、董某甲归案后如实供述自己的罪行，承认指控的犯罪事实，愿意接受处罚的，可以依法从宽处理,被告人吴某甲、徐某甲犯罪以后自动投案，如实供述自己的罪行的，是自首，可以从轻或者减轻处罚,被告人吴某甲、徐某甲、董某甲缴纳罚金保证金，有悔罪表现，酌情予以从轻处罚,根据被告人吴某甲、徐某甲、董某甲的犯罪事实、犯罪情节和悔罪表现，宣告缓刑，对所居住社区没有重大不良影响，决定对被告人吴某甲、徐某甲、董某甲其适用缓刑'
# text1 = '胡增军#薛孝清#本院认为，被告人薛孝清、陈国池纠集、组织夏仁波、江建东、薛顺金、陈香英、林友利、陈杰、陈义、吴家实、李孝富、曾云安、姚仲阳、姚日峰、高长远、吴存奎、王维猛、胡增军、邓招波、杨孝荣、马振城、林孝龙、徐顺积，使用逃避海关监管，从海上偷运入境的方式走私白糖入境销售牟利，除被告人马振城参与偷逃的税额巨大以外，其余被告人组织或参与偷逃的税额特别巨大，其行为均已构成走私普通货物罪,薛孝清、陈国池系组织、纠集者，起主要作用，系主犯,被告人薛孝清、马振城曾被判处有期徒刑以上刑罚，刑罚执行完毕后五年内再犯应当判处有期徒刑以上刑罚之罪，系累犯，依法应当从重处罚''林友利、陈杰、陈义、吴家实、李孝富、曾云安、姚仲阳、姚日峰、高长远、吴存奎、王维猛、胡增军、邓招波、杨孝荣、马振城、林孝龙、徐顺积受雇佣，帮助运输、卸货、销售走私货物，起次要或辅助作用，依法予以不同程度的减轻处罚,夏仁波、江建东、林友利、陈义、李孝富、曾云安、姚仲阳、姚日峰、高长远、吴存奎、王维猛、胡增军、邓招波、杨孝荣、徐顺积有坦白情节，依法可以从轻处罚'
# text1 = '李裔佐#杨丹#"本院认为，被告人李加强、胡思和、杨开赏、李裔佐、杨崇化、李加勇、杨丹、王大旺、戴少邓、郑尔爽、杨崇值、冯仲存、杨开法、戴永胜、彭成华、李上柱、陈庆义、赵加令、李加坎、董容全、李来进、郑思法、缪信国结伙使用逃避海关监管，从海上偷运入境的方式走私柴油入境销售牟利，偷逃进口环节应缴税额特别巨大，其行为均已构成走私普通货物罪,被告人李加强、胡思和、杨开赏、李裔佐、杨崇化在共同犯罪中行为积极、作用大，均系主犯，其余被告人起次要或辅助作用，系从犯，予以不同程度的减轻处罚,被告人杨崇化、李加勇、杨丹、肖云隆、陈光胜、董容全、郑思法、缪信国、林芝忠、陈作隆、刘维标、刘维程、黄同金、陈强力有坦白情节，可以从轻处罚'
text1 = '杨崇化#"本院认为，被告人李加强、胡思和、杨开赏、李裔佐、杨崇化、李加勇、杨丹、王大旺、戴少邓、郑尔爽、杨崇值、冯仲存、杨开法、戴永胜、彭成华、李上柱、陈庆义、赵加令、李加坎、董容全、李来进、郑思法、缪信国结伙使用逃避海关监管，从海上偷运入境的方式走私柴油入境销售牟利，偷逃进口环节应缴税额特别巨大，其行为均已构成走私普通货物罪,被告人杨崇化、李加勇、杨丹、肖云隆、陈光胜、董容全、郑思法、缪信国、林芝忠、陈作隆、刘维标、刘维程、黄同金、陈强力有坦白情节，可以从轻处罚,被告人李加强、胡思和、杨开赏、李裔佐、杨崇化在共同犯罪中行为积极、作用大，均系主犯，被告人杨丹、肖云隆、陈光胜、董容全、郑思法、缪信国、林芝忠、陈作隆起次要或辅助作用，系从犯，予以不同程度的减轻处罚'


per1, per2, doc = text1.split('#')
text = '$'.join([per1, per2, doc.replace(per1, len(per1)*'#').replace(per2, len(per2)*'#')])
print(text)


# 利用BERT提取句子特征
bert_model = BertVector(pooling_strategy="NONE", max_seq_len=256)
vec = bert_model.encode([text])["encodes"][0]
x_train = np.array([vec])

# 模型预测并输出预测结果
predicted = model.predict(x_train)
y = np.argmax(predicted[0])

with open('data/rel_dict.json', 'r', encoding='utf-8') as f:
    rel_dict = json.load(f)

id_rel_dict = {v:k for k,v in rel_dict.items()}
print('原文: %s' % text1)
print('预测人物关系: %s' % id_rel_dict[y])

# '''single role(test)'''
# per, doc = text1.split('#')
# text = '$'.join([per, doc.replace(per, len(per)*'#')])
# print(text)


# # 利用BERT提取句子特征
# bert_model = BertVector(pooling_strategy="NONE", max_seq_len=256)
# vec = bert_model.encode([text])["encodes"][0]
# x_train = np.array([vec])

# # 模型预测并输出预测结果
# predicted = model.predict(x_train)
# y = np.argmax(predicted[0])

# with open('data/rel_dict.json', 'r', encoding='utf-8') as f:
#     rel_dict = json.load(f)

# id_rel_dict = {v:k for k,v in rel_dict.items()}
# print('原文: %s' % text1)
# print('预测人物角色: %s' % id_rel_dict[y])

